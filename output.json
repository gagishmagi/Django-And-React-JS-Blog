{"content": {"suites": {"0": {"status": {"total_pass": 5, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_create_article", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_delete_article", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_get_article", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_get_articles", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_update_article", "rerun": "0"}}, "suite_name": "tests/integration/test_articles_api.py"}, "1": {"suite_name": "tests/unit/test_articles_unit.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_delete_article", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_deserialize_article", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_serialize_article", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_update_article", "rerun": "0"}}, "status": {"total_pass": 4, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "2": {"suite_name": "tests/e2e/test_articles_e2e.py", "tests": {"0": {"status": "ERROR", "message": "self = <test_articles_e2e.TestCreateArticle object at 0x7f88987cd9c0>\n\n    def setup_method(self):\n        chrome_options = Options()\n        chrome_options.add_argument(\"--headless\")\n        chrome_options.add_argument(\"--no-sandbox\")\n        chrome_options.add_argument(\"--disable-dev-shm-usage\")\n        chrome_options.add_argument(\"--start-maximized\")\n>       self.driver = webdriver.Chrome(ChromeDriverManager().install(), options=chrome_options)\n\ntests/e2e/test_articles_e2e.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../.venv/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:76: in __init__\n    RemoteWebDriver.__init__(\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:252: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:319: in execute\n    response = self.command_executor.execute(driver_command, params)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py:374: in execute\n    return self._request(command_info[0], url, body=data)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py:397: in _request\n    resp = self._conn.request(method, url, body=body, headers=headers)\n../.venv/lib/python3.10/site-packages/urllib3/_request_methods.py:143: in request\n    return self.request_encode_body(\n../.venv/lib/python3.10/site-packages/urllib3/_request_methods.py:278: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:432: in urlopen\n    conn = self.connection_from_host(u.host, port=u.port, scheme=u.scheme)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:303: in connection_from_host\n    return self.connection_from_context(request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:328: in connection_from_context\n    return self.connection_from_pool_key(pool_key, request_context=request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:351: in connection_from_pool_key\n    pool = self._new_pool(scheme, host, port, request_context=request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:265: in _new_pool\n    return pool_cls(host, port, **request_context)\n../.venv/lib/python3.10/site-packages/urllib3/connectionpool.py:193: in __init__\n    timeout = Timeout.from_float(timeout)\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:186: in from_float\n    return Timeout(read=timeout, connect=timeout)\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:115: in __init__\n    self._connect = self._validate_timeout(connect, \"connect\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'urllib3.util.timeout.Timeout'>\nvalue = <object object at 0x7f889ba9cee0>, name = 'connect'\n\n    @classmethod\n    def _validate_timeout(cls, value: _TYPE_TIMEOUT, name: str) -> _TYPE_TIMEOUT:\n        \"\"\"Check that a timeout attribute is valid.\n    \n        :param value: The timeout value to validate\n        :param name: The name of the timeout attribute to validate. This is\n            used to specify in error messages.\n        :return: The validated and casted version of the given value.\n        :raises ValueError: If it is a numeric value less than or equal to\n            zero, or the type is not an integer, float, or None.\n        \"\"\"\n        if value is None or value is _DEFAULT_TIMEOUT:\n            return value\n    \n        if isinstance(value, bool):\n            raise ValueError(\n                \"Timeout cannot be a boolean value. It must \"\n                \"be an int, float or None.\"\n            )\n        try:\n            float(value)\n        except (TypeError, ValueError):\n>           raise ValueError(\n                \"Timeout value %s was %s, but it must be an \"\n                \"int, float or None.\" % (name, value)\n            ) from None\nE           ValueError: Timeout value connect was <object object at 0x7f889ba9cee0>, but it must be an int, float or None.\n\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:152: ValueError\n", "test_name": "test_create_article", "rerun": "0"}, "1": {"status": "ERROR", "message": "self = <test_articles_e2e.TestCreateArticle object at 0x7f88987cd600>\n\n    def setup_method(self):\n        chrome_options = Options()\n        chrome_options.add_argument(\"--headless\")\n        chrome_options.add_argument(\"--no-sandbox\")\n        chrome_options.add_argument(\"--disable-dev-shm-usage\")\n        chrome_options.add_argument(\"--start-maximized\")\n>       self.driver = webdriver.Chrome(ChromeDriverManager().install(), options=chrome_options)\n\ntests/e2e/test_articles_e2e.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../.venv/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:76: in __init__\n    RemoteWebDriver.__init__(\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:252: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:319: in execute\n    response = self.command_executor.execute(driver_command, params)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py:374: in execute\n    return self._request(command_info[0], url, body=data)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py:397: in _request\n    resp = self._conn.request(method, url, body=body, headers=headers)\n../.venv/lib/python3.10/site-packages/urllib3/_request_methods.py:143: in request\n    return self.request_encode_body(\n../.venv/lib/python3.10/site-packages/urllib3/_request_methods.py:278: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:432: in urlopen\n    conn = self.connection_from_host(u.host, port=u.port, scheme=u.scheme)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:303: in connection_from_host\n    return self.connection_from_context(request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:328: in connection_from_context\n    return self.connection_from_pool_key(pool_key, request_context=request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:351: in connection_from_pool_key\n    pool = self._new_pool(scheme, host, port, request_context=request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:265: in _new_pool\n    return pool_cls(host, port, **request_context)\n../.venv/lib/python3.10/site-packages/urllib3/connectionpool.py:193: in __init__\n    timeout = Timeout.from_float(timeout)\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:186: in from_float\n    return Timeout(read=timeout, connect=timeout)\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:115: in __init__\n    self._connect = self._validate_timeout(connect, \"connect\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'urllib3.util.timeout.Timeout'>\nvalue = <object object at 0x7f889ba9cee0>, name = 'connect'\n\n    @classmethod\n    def _validate_timeout(cls, value: _TYPE_TIMEOUT, name: str) -> _TYPE_TIMEOUT:\n        \"\"\"Check that a timeout attribute is valid.\n    \n        :param value: The timeout value to validate\n        :param name: The name of the timeout attribute to validate. This is\n            used to specify in error messages.\n        :return: The validated and casted version of the given value.\n        :raises ValueError: If it is a numeric value less than or equal to\n            zero, or the type is not an integer, float, or None.\n        \"\"\"\n        if value is None or value is _DEFAULT_TIMEOUT:\n            return value\n    \n        if isinstance(value, bool):\n            raise ValueError(\n                \"Timeout cannot be a boolean value. It must \"\n                \"be an int, float or None.\"\n            )\n        try:\n            float(value)\n        except (TypeError, ValueError):\n>           raise ValueError(\n                \"Timeout value %s was %s, but it must be an \"\n                \"int, float or None.\" % (name, value)\n            ) from None\nE           ValueError: Timeout value connect was <object object at 0x7f889ba9cee0>, but it must be an int, float or None.\n\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:152: ValueError\n", "test_name": "test_create_multiple_articles", "rerun": "0"}, "2": {"status": "ERROR", "message": "self = <test_articles_e2e.TestCreateArticle object at 0x7f88987cdc90>\n\n    def setup_method(self):\n        chrome_options = Options()\n        chrome_options.add_argument(\"--headless\")\n        chrome_options.add_argument(\"--no-sandbox\")\n        chrome_options.add_argument(\"--disable-dev-shm-usage\")\n        chrome_options.add_argument(\"--start-maximized\")\n>       self.driver = webdriver.Chrome(ChromeDriverManager().install(), options=chrome_options)\n\ntests/e2e/test_articles_e2e.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../.venv/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:76: in __init__\n    RemoteWebDriver.__init__(\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:252: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:319: in execute\n    response = self.command_executor.execute(driver_command, params)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py:374: in execute\n    return self._request(command_info[0], url, body=data)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py:397: in _request\n    resp = self._conn.request(method, url, body=body, headers=headers)\n../.venv/lib/python3.10/site-packages/urllib3/_request_methods.py:143: in request\n    return self.request_encode_body(\n../.venv/lib/python3.10/site-packages/urllib3/_request_methods.py:278: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:432: in urlopen\n    conn = self.connection_from_host(u.host, port=u.port, scheme=u.scheme)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:303: in connection_from_host\n    return self.connection_from_context(request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:328: in connection_from_context\n    return self.connection_from_pool_key(pool_key, request_context=request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:351: in connection_from_pool_key\n    pool = self._new_pool(scheme, host, port, request_context=request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:265: in _new_pool\n    return pool_cls(host, port, **request_context)\n../.venv/lib/python3.10/site-packages/urllib3/connectionpool.py:193: in __init__\n    timeout = Timeout.from_float(timeout)\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:186: in from_float\n    return Timeout(read=timeout, connect=timeout)\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:115: in __init__\n    self._connect = self._validate_timeout(connect, \"connect\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'urllib3.util.timeout.Timeout'>\nvalue = <object object at 0x7f889ba9cee0>, name = 'connect'\n\n    @classmethod\n    def _validate_timeout(cls, value: _TYPE_TIMEOUT, name: str) -> _TYPE_TIMEOUT:\n        \"\"\"Check that a timeout attribute is valid.\n    \n        :param value: The timeout value to validate\n        :param name: The name of the timeout attribute to validate. This is\n            used to specify in error messages.\n        :return: The validated and casted version of the given value.\n        :raises ValueError: If it is a numeric value less than or equal to\n            zero, or the type is not an integer, float, or None.\n        \"\"\"\n        if value is None or value is _DEFAULT_TIMEOUT:\n            return value\n    \n        if isinstance(value, bool):\n            raise ValueError(\n                \"Timeout cannot be a boolean value. It must \"\n                \"be an int, float or None.\"\n            )\n        try:\n            float(value)\n        except (TypeError, ValueError):\n>           raise ValueError(\n                \"Timeout value %s was %s, but it must be an \"\n                \"int, float or None.\" % (name, value)\n            ) from None\nE           ValueError: Timeout value connect was <object object at 0x7f889ba9cee0>, but it must be an int, float or None.\n\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:152: ValueError\n", "test_name": "test_edit_post", "rerun": "0"}, "3": {"status": "ERROR", "message": "self = <test_articles_e2e.TestCreateArticle object at 0x7f88987ce0b0>\n\n    def setup_method(self):\n        chrome_options = Options()\n        chrome_options.add_argument(\"--headless\")\n        chrome_options.add_argument(\"--no-sandbox\")\n        chrome_options.add_argument(\"--disable-dev-shm-usage\")\n        chrome_options.add_argument(\"--start-maximized\")\n>       self.driver = webdriver.Chrome(ChromeDriverManager().install(), options=chrome_options)\n\ntests/e2e/test_articles_e2e.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../.venv/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py:76: in __init__\n    RemoteWebDriver.__init__(\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:157: in __init__\n    self.start_session(capabilities, browser_profile)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:252: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:319: in execute\n    response = self.command_executor.execute(driver_command, params)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py:374: in execute\n    return self._request(command_info[0], url, body=data)\n../.venv/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py:397: in _request\n    resp = self._conn.request(method, url, body=body, headers=headers)\n../.venv/lib/python3.10/site-packages/urllib3/_request_methods.py:143: in request\n    return self.request_encode_body(\n../.venv/lib/python3.10/site-packages/urllib3/_request_methods.py:278: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:432: in urlopen\n    conn = self.connection_from_host(u.host, port=u.port, scheme=u.scheme)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:303: in connection_from_host\n    return self.connection_from_context(request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:328: in connection_from_context\n    return self.connection_from_pool_key(pool_key, request_context=request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:351: in connection_from_pool_key\n    pool = self._new_pool(scheme, host, port, request_context=request_context)\n../.venv/lib/python3.10/site-packages/urllib3/poolmanager.py:265: in _new_pool\n    return pool_cls(host, port, **request_context)\n../.venv/lib/python3.10/site-packages/urllib3/connectionpool.py:193: in __init__\n    timeout = Timeout.from_float(timeout)\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:186: in from_float\n    return Timeout(read=timeout, connect=timeout)\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:115: in __init__\n    self._connect = self._validate_timeout(connect, \"connect\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'urllib3.util.timeout.Timeout'>\nvalue = <object object at 0x7f889ba9cee0>, name = 'connect'\n\n    @classmethod\n    def _validate_timeout(cls, value: _TYPE_TIMEOUT, name: str) -> _TYPE_TIMEOUT:\n        \"\"\"Check that a timeout attribute is valid.\n    \n        :param value: The timeout value to validate\n        :param name: The name of the timeout attribute to validate. This is\n            used to specify in error messages.\n        :return: The validated and casted version of the given value.\n        :raises ValueError: If it is a numeric value less than or equal to\n            zero, or the type is not an integer, float, or None.\n        \"\"\"\n        if value is None or value is _DEFAULT_TIMEOUT:\n            return value\n    \n        if isinstance(value, bool):\n            raise ValueError(\n                \"Timeout cannot be a boolean value. It must \"\n                \"be an int, float or None.\"\n            )\n        try:\n            float(value)\n        except (TypeError, ValueError):\n>           raise ValueError(\n                \"Timeout value %s was %s, but it must be an \"\n                \"int, float or None.\" % (name, value)\n            ) from None\nE           ValueError: Timeout value connect was <object object at 0x7f889ba9cee0>, but it must be an int, float or None.\n\n../.venv/lib/python3.10/site-packages/urllib3/util/timeout.py:152: ValueError\n", "test_name": "test_delete_added_article", "rerun": "0"}}, "status": {"total_pass": 0, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 4}}}}, "date": "January 11, 2025", "start_time": 1736626351.868244, "total_suite": 3, "status": "FAIL", "status_list": {"pass": "9", "fail": "0", "skip": "0", "error": "4", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "13"}